#!/bin/bash

set -eu

: ${BOSH_ENVIRONMENT:?required}
: ${BOSH_CA_CERT:?required}
: ${BOSH_CLIENT:?required}
: ${BOSH_CLIENT_SECRET:?required}

#
# stemcell metadata/upload
#

STEMCELL_CPI=${STEMCELL_CPI:-aws-xen-hvm}
STEMCELL_OS=${STEMCELL_OS:-ubuntu-xenial}
STEMCELL_VERSION=$(cat stemcell/version)

if [[ $(bosh stemcells --json | jq -r ".Tables[0].Rows[] | select(.os == \"${STEMCELL_OS}\") | .version | test(\"${STEMCELL_VERSION}\")" | grep true | uniq) != "true" ]]; then
  #                        https://bosh.io/d/stemcells/bosh-aws-xen-hvm-ubuntu-trusty-go_agent?v=3586.7
  bosh -n upload-stemcell "https://bosh.io/d/stemcells/bosh-${STEMCELL_CPI}-${STEMCELL_OS}-go_agent?v=${STEMCELL_VERSION}"
fi

#
# release metadata/upload
#

cd release
tar -xzf *.tgz $( tar -tzf *.tgz | grep 'release.MF' )
RELEASE_NAME=$( grep -E '^name: ' release.MF | awk '{print $2}' | tr -d "\"'" )
RELEASE_VERSION=$( grep -E '^version: ' release.MF | awk '{print $2}' | tr -d "\"'" )

bosh -n upload-release *.tgz
cd ../

#
# compilation deployment
#

cat > manifest.yml <<EOF
---
name: compilation-${RELEASE_NAME}
releases:
- name: "$RELEASE_NAME"
  version: "$RELEASE_VERSION"
stemcells:
- alias: default
  os: "$STEMCELL_OS"
  version: "$STEMCELL_VERSION"
update:
  canaries: 1
  max_in_flight: 1
  canary_watch_time: 1000 - 90000
  update_watch_time: 1000 - 90000
instance_groups: []
EOF

export BOSH_DEPLOYMENT="compilation-${RELEASE_NAME}"

delete_compilation_deployment() {
	echo "Cleaning up deployment..."
	bosh -n delete-deployment --force
}
trap "echo; echo; echo; sleep 10; delete_compilation_deployment" EXIT SIGINT SIGTERM


bosh -n deploy manifest.yml
bosh    export-release $RELEASE_NAME/$RELEASE_VERSION $STEMCELL_OS/$STEMCELL_VERSION

mkdir -p compiled-release/compiled-releases/$RELEASE_NAME
mv *.tgz compiled-release/compiled-releases/$RELEASE_NAME/$( echo *.tgz | sed "s/\.tgz$/-$( date -u +%Y%m%d%H%M%S ).tgz/" )
sha1sum  compiled-release/compiled-releases/$RELEASE_NAME/*.tgz